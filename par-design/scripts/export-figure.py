import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import make_interp_spline

def polyfit(x, y, deg):
    slope, intercept = np.polyfit(x, y, deg)
    return slope * x + intercept

file    = './assets/02-K8N64D0-1-scatter.png'
title   = 'FLOYD PERFORMANCE'
x_label = 'density'
y_label = 'time (us)'
type    = ''

Xs = [np.array(e) for e in [
    [0.0]*32+[0.1]*32+[0.2]*32+[0.3]*32+[0.4]*32+[0.5]*32+[0.6]*32+[0.7]*32+[0.8]*32+[0.9]*32+[1.0]*32
]]

Ys = [np.array(e) for e in [
    [
631454,623033,623284,661331,669473,676715,639980,654757,650237,629917,759199,654688,630899,625589,623352,655749,622808,627112,686231,617710,637056,668876,666132,643648,686014,661977,625097,656075,621003,644900,610039,602445,
583175,647031,647307,677612,644792,626779,633837,655400,630426,641784,598805,605973,643462,628469,566077,609733,618395,628314,634674,625358,674699,654063,653544,649091,636088,662777,678489,653626,634089,615957,630034,645788,
597360,624686,606936,593571,627556,612779,601794,588497,596581,586869,629354,604697,629966,626902,623790,630341,639374,592729,618143,653851,604214,607538,626915,650717,611871,621333,611767,658609,622495,639489,613764,628015,
633395,590956,586109,615482,633928,643930,659511,614246,638232,614266,610888,672649,605166,658683,710989,633848,631391,671008,595035,598429,605806,680388,633009,641722,656134,612928,673274,632088,633505,653654,619613,627303,
573857,606043,645660,650542,636175,656256,646034,629759,669143,690052,632010,645755,633163,630578,629260,642863,613713,652076,610894,621644,648052,649088,651142,654663,624204,627545,660429,593762,646832,654791,643571,638903,
618763,583539,631713,614046,610867,593994,640193,623193,651362,610252,593235,653189,606497,621897,633779,625247,613980,602844,628453,651064,613438,629356,648520,617329,657079,609149,683999,630597,631713,675391,669965,624493,
567233,609354,601916,608858,625767,626711,610236,598036,670489,606622,622322,615183,640361,599243,607063,613428,612055,623887,621919,595667,650431,607458,651595,633538,601162,629636,609347,613904,658033,678686,659750,601613,
620135,601604,641136,619549,639509,645074,638705,638058,629660,638778,608078,670864,707920,612539,653745,695825,655971,659878,623764,648819,638169,637599,632017,698515,615776,608929,639406,634132,628636,635187,757830,671079,
601924,645191,614048,612380,643028,633507,611583,655371,622469,645973,648231,638620,610122,670504,634135,639254,626061,643934,628197,625771,639396,642161,696922,666927,620969,651373,662252,699062,675811,624972,634023,661002,
621344,557475,597660,588429,622420,620910,651641,630935,600771,608444,634346,620552,623045,590915,673254,634049,628431,609279,606738,624311,617719,645172,638838,681498,609241,632184,654763,641406,639269,618495,659830,635990,
596368,616762,625730,625440,678294,712303,618386,640038,653128,644884,614426,629650,660336,634128,631153,648430,661540,628085,667099,644826,631977,620521,656697,657957,638974,649969,652336,719485,655882,675968,645446,613147,
    ],
]]

match type:
    case 'interp':
        _Xs = [np.linspace(X.min(), X.max(), 300) for X in Xs]
        _Ys = [make_interp_spline(Xs[i], Ys[i], k=3)(_Xs[i]) for i in range(len(Xs))]
    case 'fit':
        _Xs = Xs
        _Ys = [polyfit(Xs[i], Ys[i], 1) for i in range(len(Xs))]
    case _:
        _Xs = Xs
        _Ys = Ys

plt.figure(figsize=(8, 6))
for i in range(len(Xs)):
    plt.plot(_Xs[i], _Ys[i])
for i in range(len(Xs)):
    plt.scatter(Xs[i], Ys[i])

for i in range(11):
    y = Ys[0][i*32:(i+1)*32].mean()
    plt.plot([i*0.1-0.02,i*0.1+0.02],[y,y],color='red')


plt.title(title)
plt.xlabel(x_label)
plt.ylabel(y_label)
plt.legend()
plt.grid(True)

plt.savefig(file)
plt.show()
